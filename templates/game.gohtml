<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Dali Hold'em</title>
    <style>
        body {
            background-image: url('/res/dali_table.svg');
            background-size: cover;
            font-family: sans-serif;
            color: #fff;
        }
        #table {
            background: rgba(0,0,0,0.6);
            margin: 40px auto;
            padding: 20px;
            width: 800px;
            border-radius: 20px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        img.card {
            width: 100px;
            border: 2px solid #fff;
            border-radius: 5px;
            box-shadow: 0 0 10px #fff;
            animation: deal 0.5s ease-out;
        }
        @keyframes deal {
            from { transform: translateY(-50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
        .chip {
            width: 20px;
            height: 20px;
            background: radial-gradient(circle, #f00 0%, #900 100%);
            border-radius: 50%;
            position: absolute;
            pointer-events: none;
        }
    </style>
</head>
<body>
<div id="table">
    <h1>Dali Hold'em</h1>
    <div id="message"></div>
    <h3>Pot: <span id="pot"></span></h3>
    <div id="board"></div>
    <div id="npc">
        <h2>Dali NPC - Chips: <span id="npc-chips"></span></h2>
        <div id="npc-hand"></div>
    </div>
    <div id="player">
        <h2>You - Chips: <span id="player-chips"></span></h2>
        <div id="player-hand"></div>
    </div>
    <div id="actions">
        <button onclick="sendAction('call')">Call/Check</button>
        <button onclick="sendAction('fold')">Fold</button>
    </div>
</div>
<script>
var protocol = (location.protocol === 'https:') ? 'wss' : 'ws';
var ws = new WebSocket(`${protocol}://${location.host}/ws`);
ws.onmessage = function(evt) {
    var msg = JSON.parse(evt.data);
    if (msg.type !== 'state') return;
    var s = msg.payload;
    document.getElementById('pot').innerText = s.pot;
    document.getElementById('player-chips').innerText = s.playerChips;
    document.getElementById('npc-chips').innerText = s.npcChips;
    document.getElementById('message').innerText = s.message;
    document.getElementById('board').innerHTML = s.board.map(renderCard).join('');
    document.getElementById('player-hand').innerHTML = s.playerHand.map(renderCard).join('');
    document.getElementById('npc-hand').innerHTML = s.npcHand.map(renderCard).join('');
    if (s.winner) {
        celebrate(s.winner);
    }
};
ws.onerror = function() {
    document.getElementById('message').innerText = 'WebSocket error';
};
ws.onclose = function() {
    document.getElementById('message').innerText = 'WebSocket connection closed';
};
function renderCard(c) {
    return `<img class="card" src="/res/Color/${c}.svg">`;
}
function sendAction(a) {
    ws.send(JSON.stringify({action:a}));
}

function celebrate(winner) {
    var table = document.getElementById('table');
    var potEl = document.getElementById('pot');
    var destEl = winner === 'You' ? document.getElementById('player-chips') : document.getElementById('npc-chips');
    var tableRect = table.getBoundingClientRect();
    var potRect = potEl.getBoundingClientRect();
    var destRect = destEl.getBoundingClientRect();
    var chip = document.createElement('div');
    chip.className = 'chip';
    chip.style.left = (potRect.left - tableRect.left) + 'px';
    chip.style.top = (potRect.top - tableRect.top) + 'px';
    table.appendChild(chip);
    chip.animate([
        { left: chip.style.left, top: chip.style.top },
        { left: (destRect.left - tableRect.left) + 'px', top: (destRect.top - tableRect.top) + 'px' }
    ], { duration: 1000, fill: 'forwards' });
    setTimeout(function(){ chip.remove(); }, 1000);
}
</script>
</body>
</html>
